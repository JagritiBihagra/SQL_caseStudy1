select * from product
select * from fact
select * from Location

--1. Display the number of states present in the LocationTable.
select count(distinct State) from dbo.Location


--2.How many products are of regular type?
select count(Product) as no_of_regular from Product where type='Regular'


--3.How much spending has been done on marketing of product ID 1?
select SUM(marketing) as total_marketing_expenses from dbo.fact where ProductId=1

--or
select sum(marketing) total_spent_on_marketing  from fact a left join Product b
on a.ProductId=b.ProductId where a.ProductId=1


--4. What is the minimum sales of a product?
select min(sales) min_sales from fact

--or
select sales from dbo.fact f
left join
dbo.Product p
on f.productid=P.Productid
where sales=( select min(sales) from dbo.fact)

--5. Display the max Cost of Good Sold (COGS). 
select max(COGS) max_of_cogs from fact 

--6. Display the details of the product where product type is coffee.
select * from dbo.Product where [Product Type]='coffee'

--7. Display the details where total expenses are greater than 40.
select ProductId from fact where [Total Expenses]>40 order by [Total Expenses]

--or 
select p.ProductId, p.[Product Type],p.Product,f.[Total Expenses] from Product p  right join  fact f   
on f.ProductId=p.ProductId
where f.[Total Expenses]>40 order by f.[Total Expenses]

--8. What is the average sales in area code 719?
select round(avg(f.sales),2) avg_sales from fact f 
join Location l
on f.[Area Code]=l.[Area Code]
where f.[Area Code]= 719

--9. Find out the total profit generated by Colorado state.
select sum(f.profit) total_profit from fact f join Location l
on f.[Area Code]=l.[Area Code]
where l.State= 'Colorado'

--10. Display the average inventory for each product ID???????????
select f.ProductId, avg(f.Inventory) as avg_inventory from fact f join Product p 
on f.ProductId=p.ProductId group by  f.ProductId 
order by f.ProductId

--or
select productid,avg(inventory) as avg_inventory from dbo.fact group by productid
order by ProductId


--11. Display state in a sequential order in a Location Table. 
select distinct state from Location order by State asc

--12. Display the average budget of the Product where the average budget margin should be greater than 100. 
select ProductId, round(avg([Budget Margin]),2) avg_budget_margin from fact
group by ProductId 
having avg([Budget Margin])>100 order by ProductId

--or
select ProductId, avg_budget_margin from 
(select ProductId, round(avg([Budget Margin]),2) avg_budget_margin from fact 
group by ProductId) a 
where avg_budget_margin>100 order by ProductId

--or
with cte_budget_margin as
(select ProductId, avg([Budget Margin]) avg_budget_margin from fact 
group by ProductId) 
select ProductId,avg_budget_margin from cte_budget_margin where avg_budget_margin>100
order by ProductId

--13. What is the total sales done on date 2010-01-01?
select sum(sales) total_sales from fact
where Date= '2010-01-01'

--14. Display the average total expense of each product ID on an individual date. 
select distinct date, ProductId, avg([Total Expenses]) avg_total_expenses from fact
group by ProductId,  date order by ProductId, Date

--15. Display the table with the following attributes such as date, productID, 
--product_type, product, sales, profit, state, area_code.
select Date, f.ProductId , P.Product, [Product Type],  Sales, Profit, state, L.[Area Code] from fact
inner join Location L on f.[Area Code] =L.[Area Code]
inner join Product P on  f.productId=P.productId

--16. Display the rank without any gap to show the sales wise rank. 
select *, 
DENSE_RANK() over(order by sales asc) DR
from fact

--17. Find the state wise profit and sales. 
select l.State, sum(f.Profit) total_profit , sum(f.sales) total_sales
from fact f join Location l 
on f.[Area Code]=l.[Area Code]
group by l.State
order by l.State

--18. Find the state wise profit and sales along with the productname
select l.State, sum(f.Profit) total_profit , sum(f.sales) total_sales, p.Product
from fact f 
join Location l 
on f.[Area Code]=l.[Area Code]
join Product p on p.ProductId=f.ProductId
group by l.State, p.Product
order by  l.State

--19. If there is an increase in sales of 5%, calculate the increased sales.
select sales,(sales*1.05) as incresed_sales from fact

--20. Find the maximum profit along with the product ID and producttype.

select fact.ProductId,[Product Type], profit from fact
inner join
Product
on fact.ProductId=Product.ProductId
where fact.Profit=(select max(profit) from fact)


--21. Create a stored procedure to fetch the result according to the product typefrom Product Table.
create or alter procedure product_type
  @prod_type varchar(10)
as begin
begin transaction
select * from Product where [Product Type]= @prod_type
commit
end
execute product_type @prod_type='tea'
execute product_type @prod_type='coffee'

--22. Write a query by creating a condition in which if the total expenses is lessthan60 then it is a profit or else loss
select ProductId,  case
when [Total Expenses]<60 then 'profit' else 'Loss' end profit_loss
from fact group by ProductId,[Total Expenses]
order by ProductId

--or
select ProductId , IIF([Total Expenses]<60, 'Profit','Loss') profit_loss from fact group by ProductId,[Total Expenses]
order by ProductId

--24. Apply union and intersection operator on the tables which consist of attribute area code.
select [Area Code] from fact 
union  select [Area Code] from Location

select [Area Code] from fact 
intersect  select [Area Code] from Location

--25. Create a user-defined function for the product table to fetch a particular product type based upon the users preference.
create or alter function func_product_type
(@prod_type varchar(10))
returns varchar(50)
as begin
declare  @result varchar(50)
    select @result = [Product Type]
    from Product
    where product = @prod_type

    return @result
END 
SELECT dbo.func_product_type('Laptop') AS ProductType

--26. Change the product type from coffee to tea where product IDis 1 and undo it.
 begin transaction 
 update Product
 set [Product Type]='Tea' 
 where ProductId=1 
 rollback transaction

---27. Display the date, product ID and sales where total expenses are between 100 to 200. 
select date, ProductId, Sales from fact
where [Total Expenses] between 100 and 200

---28. Delete the records in the Product Table for regular type. 
DELETE FROM Product where Type = 'Regular'

--29. Display the ASCII value of the fifth character from the columnProduct
SELECT Product, ASCII(SUBSTRING(product, 5,1)) ASCII_VALUE from Product